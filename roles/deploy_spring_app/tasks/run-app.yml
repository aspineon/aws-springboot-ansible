---

- name: Stop Spring App Tomcat server
  command: "/etc/init.d/spring_app_{{ aws_profile }}_{{ item }}_args stop"
  ignore_errors: yes

- name: Ensure Spring App Tomcat server is down
  command: netstat -ntpl | grep "{{ app_port+item }}" | tail -n 1 | awk '{print $7 }' | awk '{gsub(/\/java/,"")}1' | kill $(cat)
  become_user: root
  ignore_errors: yes

- name: Start Spring App Tomcat server
  command: "/etc/init.d/spring_app_{{ aws_profile }}_{{ item }}_args start "
  notify:
    - reload nginx
    - reload haproxy

- name: Pause, let's wait a bit for the Spring app to pickup
  pause: seconds=60

- name: Let's test the app and services are running
  uri:
    url: "http://localhost"
    return_content: yes
  register: test_response

- name: Ensure the app is doing what we want, if not we will pause the playbook
  pause: seconds="120"
  when: 'not "home" in test_response.content'
  ignore_errors: yes